/*====================================
  0. Base MIXINS
    ----------------------------------
    Structure
    ----------------------------------
    - 1. Font size
    - 2. Media Queries width
      2.1 Media Queries width base
      2.2 Media Queries min
      2.3 Media Queries max
      2.4 Media Queries Only
    - 3. Media Dark Mode
    - 4. Media Portrait
    - 5. Media Landscape
    - 6. Button Reset
    - 7. Size
    - 8. Aspect Ratio
    - 9. Background Cover
    - 10. Padding & Margin
    
    ----------------------------------
    Introduction
    ----------------------------------
    
    ----------------------------------
    Constitution
    ----------------------------------
    
    ----------------------------------
    Change Log
    ----------------------------------
    - 2020/07/20   Founding
    
====================================*/
/*====================================

  - 1. Font size
--------------------------------------
  font-size のem
  line-heightを求めるmixin
  基本数は$basic_font_sizeで設定

  @include font-size(16);
  output:
  font-size: 1em;

  @include font-size(16, 18);
  output:
  font-size: 1em;
  line-height: 1.125;

====================================*/

@mixin font-size($size, $line: null, $base: $basic_font_size) {
  //font-size: $size + px;
  font-size: em-calc($size);

  @if $line !=null {
    line-height: line-height-calc($line, $size);
  }
}


/*====================================

  - 2. Media Queries width
--------------------------------------
  @include media-min(999) { *** }
  output:
  @media (min-width: 999)  { *** }

  @include media-max(999) { *** }
  output:
  @media (max-width: 999)  { *** }

  @include media-only(999, 9999) { *** }
  output:
  @media (min-width: 999) and (max-width: 9999)  { *** }

====================================*/
/*------------------------------------
  2.1 Media Queries width base
------------------------------------*/
@mixin media($direction, $point) {
  $max-negative: 0.02;
  $calc: $point;

  @if $direction==min {
    $calc: breakpoint($point);
  }

  @else {
    @if type-of($point)==number {
      $calc: breakpoint($point) - $max-negative;

    }

    @else {
      $calc: (breakpoint($point) - $max-negative);
    }
  }

  @media (#{$direction}-width: $calc) {
    @content;
  }
}

/*------------------------------------
  2.2 Media Queries min
------------------------------------*/
@mixin media-min($point: $default-breakpoint) {
  @include media(min, $point) {
    @content;
  }
}

/*------------------------------------
  2.3 Media Queries max
------------------------------------*/
@mixin media-max($point: $default-breakpoint) {
  @include media(max, $point) {
    @content;
  }
}

/*------------------------------------
  2.4 Media Queries Only
------------------------------------*/
@mixin media-only($min, $max) {
  @media (min-width: breakpoint($min)) and (max-width: (breakpoint($max)-0.02px)) {
    @content;
  }
}

/*====================================

  - 3. Media Dark Mode
--------------------------------------
  ダークモード用

  @include media-dark { *** }
  output:
  @media (prefers-color-scheme: dark)  { *** }

====================================*/
@mixin media-dark {
  @media (prefers-color-scheme: dark) {
    @content;
  }
}

/*====================================

  - 4. Media Portrait
--------------------------------------
  画面が縦長用

  @include media-portrait { *** }
  output:
  @media (orientation: portrait)  { *** }

====================================*/

@mixin media-portrait {
  @media (orientation: portrait) {
    @content;
  }
}

/*====================================

  - 5. Media Landscape
--------------------------------------
  画面が横長用

  @include media-landscape { *** }
  output:
  @media (orientation: landscape)  { *** }

====================================*/

@mixin media-landscape {
  @media (orientation: landscape) {
    @content;
  }
}

/*====================================

  - 6. Button Reset
--------------------------------------
  <button>スタイルをリセットするmixin

  @include button-reset;

====================================*/
/*
button {
   @include button-reset;
   color: #000;
}
*/
@mixin button-reset {
  background-color: transparent;
  border: none;
  cursor: pointer;
  outline: none;
  padding: 0;
  appearance: none;
  letter-spacing: inherit;
}

@mixin input-reset {
  background-color: transparent;
  border: none;
  outline: none;
  padding: 0;
  appearance: none;
  letter-spacing: inherit;
}

/*====================================

  - 7. Size
--------------------------------------
  widthとheightを設定するmixin

  @include size(100px);
  output:
  width: 100px;
  height: 100px;

  @include size(100px, 200px);
  output:
  width: 100px;
  height: 200px;

====================================*/

@mixin size($width, $height: $width) {
  width: $width;
  height: $height;
}

/*====================================

  - 8. Aspect Ratio
--------------------------------------
  widthに対してpadding-topで高さを計算する

====================================*/

@mixin aspect-ratio($width, $height, $image-path: null) {
  display: block;
  width: 100%;
  height: 0;
  padding-top: ($height / $width) * 100%;

  @if $image-path !=null {
    @include background-cover($image-path);
  }
}

/*====================================

  - 9. Background Cover
--------------------------------------
  background-size: cover;のためのmixin

====================================*/
/*
.bg {
  @include background-cover('../assets/bg-image.jpg');
}
*/
@mixin background-cover($image: null) {
  @if $image {
    background-image: url($image);
  }

  background-position: center center;
  background-size: cover;
  background-repeat: no-repeat;
}





/*====================================

  - 10. Padding & Margin
--------------------------------------
  Padding と Margin のためのmixin

====================================*/

@mixin padding-x($size) {
  padding-left: $size;
  padding-right: $size;
}

@mixin padding-y($size) {
  padding-top: $size;
  padding-bottom: $size;
}

@mixin margin-x($size) {
  margin-left: $size;
  margin-right: $size;
}

@mixin margin-y($size) {
  margin-top: $size;
  margin-bottom: $size;
}